// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>

using System;
using TPOS.Application.Interfaces;
using TPOS.Application.Interfaces.Repositories;
using TPOS.Infrastructure.Data.Repositories;

namespace TPOS.Infrastructure.Data
{
    public class UnitOfWork : IUnitOfWork
    {
        private readonly AppDbContext _context;

        public UnitOfWork(AppDbContext context)
        {
            _context = context;
             ProductCategoryRepository = new ProductCategoryRepository(context);
             CustomerRepository = new CustomerRepository(context);
             ProductItemRepository = new ProductItemRepository(context);
             DiscountRepository = new DiscountRepository(context);
             PaymentRepository = new PaymentRepository(context);
             SaleRepository = new SaleRepository(context);
             CurrencyRateRepository = new CurrencyRateRepository(context);
             ObjectRepository = new ObjectRepository(context);
             EmployeeRepository = new EmployeeRepository(context);
             SaleItemRepository = new SaleItemRepository(context);
             FolderRepository = new FolderRepository(context);
             LoyaltyRepository = new LoyaltyRepository(context);
             CompanyRepository = new CompanyRepository(context);
             BranchRepository = new BranchRepository(context);
             UserRepository = new UserRepository(context);
             TaxRepository = new TaxRepository(context);
             LoyaltyProgRepository = new LoyaltyProgRepository(context);
             ContactInfoRepository = new ContactInfoRepository(context);
             ProductRepository = new ProductRepository(context);
             RoleRepository = new RoleRepository(context);
             UserRoleRepository = new UserRoleRepository(context);
             InventoryRepository = new InventoryRepository(context);
             CategoryRepository = new CategoryRepository(context);
             FileServerRepository = new FileServerRepository(context);
             SupplierRepository = new SupplierRepository(context);
             RolePermissionRepository = new RolePermissionRepository(context);
             MenuRepository = new MenuRepository(context);
             PermissionRepository = new PermissionRepository(context);
        }
        public IProductCategoryRepository ProductCategoryRepository { get; private set; } 

        public ICustomerRepository CustomerRepository { get; private set; } 

        public IProductItemRepository ProductItemRepository { get; private set; } 

        public IDiscountRepository DiscountRepository { get; private set; } 

        public IPaymentRepository PaymentRepository { get; private set; } 

        public ISaleRepository SaleRepository { get; private set; } 

        public ICurrencyRateRepository CurrencyRateRepository { get; private set; } 

        public IObjectRepository ObjectRepository { get; private set; } 

        public IEmployeeRepository EmployeeRepository { get; private set; } 

        public ISaleItemRepository SaleItemRepository { get; private set; } 

        public IFolderRepository FolderRepository { get; private set; } 

        public ILoyaltyRepository LoyaltyRepository { get; private set; } 

        public ICompanyRepository CompanyRepository { get; private set; } 

        public IBranchRepository BranchRepository { get; private set; } 

        public IUserRepository UserRepository { get; private set; } 

        public ITaxRepository TaxRepository { get; private set; } 

        public ILoyaltyProgRepository LoyaltyProgRepository { get; private set; } 

        public IContactInfoRepository ContactInfoRepository { get; private set; } 

        public IProductRepository ProductRepository { get; private set; } 

        public IRoleRepository RoleRepository { get; private set; } 

        public IUserRoleRepository UserRoleRepository { get; private set; } 

        public IInventoryRepository InventoryRepository { get; private set; } 

        public ICategoryRepository CategoryRepository { get; private set; } 

        public IFileServerRepository FileServerRepository { get; private set; } 

        public ISupplierRepository SupplierRepository { get; private set; } 

        public IRolePermissionRepository RolePermissionRepository { get; private set; } 

        public IMenuRepository MenuRepository { get; private set; } 

        public IPermissionRepository PermissionRepository { get; private set; } 


        public async Task<int> CompleteAsync()
        {
            return await _context.SaveChangesAsync();
        }

        public void Dispose()
        {
            _context.Dispose();
        }
    }
}    
